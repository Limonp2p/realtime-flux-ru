import streamlit as st
import requests
import io
from PIL import Image

st.set_page_config(page_title="Realtime FLUX-RU", page_icon="üé®")

API_URL = "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-schnell"
HF_TOKEN = st.secrets["HF_TOKEN"]

headers = {"Authorization": f"Bearer {HF_TOKEN}"}

def generate(prompt, w, h, steps):
    payload = {
        "inputs": prompt,
        "parameters": {
            "width": w, 
            "height": h,
            "num_inference_steps": steps,
            "guidance_scale": 0.0
        }
    }
    
    response = requests.post(API_URL, json=payload, headers=headers, timeout=180)
    response.raise_for_status()
    
    # HuggingFace API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    return Image.open(io.BytesIO(response.content))

st.title("üé® Realtime FLUX ‚Äî RU –≤–µ—Ä—Å–∏—è")
st.markdown("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é FLUX.1-schnell")

prompt = st.text_area(
    "üìù –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º:",
    "–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º –≤ —Å—Ç–∏–ª–µ –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞",
    height=100
)

col1, col2, col3 = st.columns(3)
w = col1.slider("üìè –®–∏—Ä–∏–Ω–∞", 512, 1024, 768, 64)
h = col2.slider("üìê –í—ã—Å–æ—Ç–∞", 512, 1024, 768, 64) 
steps = col3.slider("üîÑ –®–∞–≥–∏", 1, 4, 2)

if st.button("üöÄ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type="primary"):
    if not prompt.strip():
        st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    else:
        with st.spinner("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..."):
            try:
                img = generate(prompt, w, h, steps)
                st.image(img, caption="‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                st.success("‚úÖ –ì–æ—Ç–æ–≤–æ! –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                
                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                st.info(f"""
                **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:**
                - üìù –ü—Ä–æ–º–ø—Ç: {prompt[:50]}{"..." if len(prompt) > 50 else ""}
                - üìê –†–∞–∑–º–µ—Ä: {w}√ó{h}
                - üîÑ –®–∞–≥–æ–≤: {steps}
                """)
                
            except requests.exceptions.RequestException as e:
                st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            except Exception as e:
                st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤
with st.expander("üí° –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤"):
    examples = [
        "–ö—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç –Ω–∞–¥ –º–æ—Ä–µ–º –≤ —Å—Ç–∏–ª–µ –∏–º–ø—Ä–µ—Å—Å–∏–æ–Ω–∏–∑–º–∞",
        "–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥ —Å –ª–µ—Ç–∞—é—â–∏–º–∏ –º–∞—à–∏–Ω–∞–º–∏",
        "–ü–æ—Ä—Ç—Ä–µ—Ç –∫–æ—Ç–∞ –≤ –∫–æ—Å—Ç—é–º–µ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç–∞", 
        "–í–æ–ª—à–µ–±–Ω—ã–π –ª–µ—Å —Å —Å–≤–µ—Ç—è—â–∏–º–∏—Å—è –≥—Ä–∏–±–∞–º–∏",
        "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –≤ –¥–∞–ª–µ–∫–æ–π –≥–∞–ª–∞–∫—Ç–∏–∫–µ"
    ]
    for example in examples:
        if st.button(f"üìã {example}", key=example):
            st.rerun()

st.markdown("---")
st.markdown("**üé® –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é FLUX.1-schnell –æ—Ç Black Forest Labs**")
